use std::error::Error;

fn main() -> Result<(), FitoError> {
	let args: Vec<String> = std::env::args().collect();
	let mut params: Vec<&str> = Vec::new();
	let mut index = 0;
	while index < args.len() {
		let arg = &args[index];
		if arg == "copy" {
			copy("", "", &params)?;
			params = Vec::new();
		} else {
			params.push(arg);
		}
		index += 1;
	}
	Ok(())
}

fn copy(origin: &str, destiny: &str, _params: &[&str]) -> Result<(), FitoError> {
	std::fs::copy(origin, destiny)?;
	Ok(())
}

pub type FitoError = Box<dyn Error>;
